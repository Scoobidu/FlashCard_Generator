// import { render, screen } from "@testing-library/react";
// import { BrowserRouter } from "react-router-dom";
// import { Provider } from "react-redux";
// import { createStore } from "redux";
// import { reducer } from "../redux/reducer";
// import CardDetails from "../Components/cardDetails/CardDetails";

// const initialState = {
//   Flashcards: [
//     {
//       id: 1,
//       group: "groupname1",
//       description: "description1",
//       card: [
//         {
//           id: 2,
//           term: "term1",
//           definition: "definition1",
//         },
//       ],
//     },
//   ],
// };

// const store = createStore(reducer, {
//   id: 1,
//   group: "groupname1",
//   description: "description1",
//   card: [
//     {
//       id: 2,
//       term: "term1",
//       definition: "definition1",
//     },
//   ],
// });

// test("renders group text", async () => {
//   const { getByText } = render(
//     <BrowserRouter>
//       <Provider store={store}>
//         <CardDetails />
//       </Provider>
//     </BrowserRouter>
//   );

//   expect(getByText(/loading/i)).toBeInTheDocument();

//   // const groupText = await screen.findByText(/groupname1/i);
//   // expect(groupText).toBeInTheDocument();
// });

// import { render, waitFor } from "@testing-library/react";
// import { Provider } from "react-redux";
// import { BrowserRouter, Route, Switch } from "react-router-dom";
// import { createStore } from "redux";
// import CardDetails from "../Components/cardDetails/CardDetails";
// import { reducer } from "../redux/reducer";

// const initialState = {
//   Flashcards: [
//     {
//       id: 1,
//       group: "groupname1",
//       description: "description1",
//       card: [
//         {
//           id: 2,
//           term: "term1",
//           definition: "definition1",
//         },
//       ],
//     },
//     {
//       id: 2,
//       group: "groupname2",
//       description: "description2",
//       card: [
//         {
//           id: 3,
//           term: "term2",
//           definition: "definition2",
//         },
//       ],
//     },
//   ],
//   cardId: 1,
// };

// const store = createStore(reducer, initialState);

// describe("CardDetails", () => {
//   it("should contain group text", async () => {
//     const { getByText } = render(
//       <BrowserRouter>
//         <Provider store={store}>
//           <Switch>
//             <Route path='/flashcards/:id' component={CardDetails} />
//           </Switch>
//         </Provider>
//       </BrowserRouter>,
//       {
//         route: "/flashcards/1",
//       }
//     );

//     // expect(getByText(/loading/i)).toBeInTheDocument();
//     await waitFor(() => {
//       const groupText = screen.getByText("almabetter");
//       expect(groupText).toBeInTheDocument();
//     });
//   });
// });

// import { render, screen, waitFor } from "@testing-library/react";
// import { Provider } from "react-redux";
// import { BrowserRouter, Route, Switch } from "react-router-dom";
// import { createStore } from "redux";
// import { reducer } from "../redux/reducer";
// import CardDetails from "../Components/cardDetails/CardDetails";

// const renderWithRedux = (
//   component,
//   { initialState, store = createStore(reducer, initialState) } = {}
// ) => {
//   return {
//     ...render(
//       <BrowserRouter>
//         <Provider store={store}>{component}</Provider>
//       </BrowserRouter>
//     ),
//     store,
//   };
// };

// describe("CardDetails component", () => {
//   it("should render group text", async () => {
//     const initialState = {
//       Flashcards: [
//         {
//           id: 1,
//           group: "groupname1",
//           description: "description1",
//           card: [
//             {
//               id: 2,
//               term: "term1",
//               definition: "definition1",
//             },
//           ],
//         },
//       ],
//     };

//     const cardId = "1";

//     const { getByText } = renderWithRedux(
//       <Switch>
//         <Route path={`/card/${cardId}`}>
//           <CardDetails />
//         </Route>
//       </Switch>,
//       { initialState }
//     );

//     expect(getByText(/loading/i)).toBeInTheDocument();

//     await waitFor(() => {
//       //   // const groupText = getByText(/groupname1/i);
//       //   // expect(groupText).toBeInTheDocument();
//       expect(screen.getByText("almabetter")).toBeInTheDocument();
//     });
//   });
// });

// import { render, screen, waitFor } from "@testing-library/react";
// import "@testing-library/jest-dom";
// import "@testing-library/jest-dom/extend-expect";
// import { Provider } from "react-redux";
// import { BrowserRouter } from "react-router-dom";
// import { createStore } from "redux";
// import CardDetails from "../Components/cardDetails/CardDetails";
// import { reducer } from "../redux/reducer";

// const renderWithRedux = (
//   component,
//   {
//     Flashcards,
//     cardId,
//     store = createStore(reducer, { Flashcards, cardId }),
//   } = []
// ) => {
//   return {
//     ...render(
//       <BrowserRouter>
//         <Provider store={store}>{component}</Provider>
//       </BrowserRouter>
//     ),
//     store,
//   };
// };
// describe(CardDetails, () => {
//   it("should contain heading and description", async () => {
//     renderWithRedux(<CardDetails />, {
//   Flashcards: [
//     {
//       id: 1,
//       group: "groupname1",
//       description: "description1",
//       card: [
//         {
//           id: 2,
//           term: "term1",
//           defination: "defination1",
//         },
//       ],
//     },
//   ],
//       cardId: 1,
//     });

//     expect(screen.getByText(/loading/i)).toBeInTheDocument();
//     await waitFor(() => {
//       const almabetterText = screen.getByText("almabetter");
//       expect(almabetterText).toBeInTheDocument();
//     });
//     // expect(
//     //   screen.getByRole("heading", { name: /groupname/i })
//     // ).toBeInTheDocument();
//   });
// });

// import { render, screen, waitFor } from "@testing-library/react";
// import "@testing-library/jest-dom";
// import "@testing-library/jest-dom/extend-expect";
// import { Provider } from "react-redux";
// import { BrowserRouter } from "react-router-dom";
// import { createStore } from "redux";
// import CardDetails from "../Components/cardDetails/CardDetails";
// import { reducer } from "../redux/reducer";

// describe(CardDetails, () => {
//   const renderWithRedux = (
//     component,
//     { Flashcards, store = createStore(reducer, Flashcards) } = []
//   ) => {
//     return {
//       ...render(
//         <BrowserRouter>
//           <Provider store={store}>{component}</Provider>
//         </BrowserRouter>
//       ),
//       store,
//     };
//   };
//   beforeEach(() => {
//     renderWithRedux(<CardDetails />, {
//   Flashcards: [
//     {
//       id: 1,
//       group: "groupname1",
//       description: "description1",
//       card: [
//         {
//           id: 2,
//           term: "term1",
//           defination: "defination1",
//         },
//       ],
//     },
//   ],
//       cardId: 1,
//     });
//   });
//   it("should contain heading and description", async () => {
//     expect(screen.getByText(/loading/i)).toBeInTheDocument();

//     const almabetter = await screen.findByText(/almabetter/i);
//     expect(almabetter).toBeInTheDocument();
//     // expect(screen.findByText(/almabetter/i)).toBeInTheDocument();
//     // await waitFor(() => {
//     // });
//     // expect(
//     //   screen.getByRole("heading", { name: /groupname/i })
//     // ).toBeInTheDocument();
//   });

//   //   it("should contain side bar with  card heading and card term link", async () => {
//   //     await waitFor(() => {
//   //       expect(
//   //         screen.getByRole("heading", { name: /flashcards/i })
//   //       ).toBeInTheDocument();
//   //       expect(screen.getByRole("link", { name: /term1/i })).toBeInTheDocument();
//   //     });
//   //   });

//   //   it("should contain buttons for share,download and print", async () => {
//   //     await waitFor(() => {
//   //       expect(
//   //         screen.getByRole("button", { name: /share/i })
//   //       ).toBeInTheDocument();
//   //       expect(
//   //         screen.getByRole("button", { name: /download/i })
//   //       ).toBeInTheDocument();
//   //       expect(
//   //         screen.getByRole("button", { name: /print/i })
//   //       ).toBeInTheDocument();
//   //     });
//   //   });
// });
